From 41fa8f5e4ad5498417a8de12031003dc1c13ea19 Mon Sep 17 00:00:00 2001
From: Alex Deryskyba <alex@codesnake.com>
Date: Tue, 22 Jul 2014 12:18:29 +0300
Subject: [PATCH 04/17] Add support for retrieval of CPU temperature on Amlogic

---
 xbmc/utils/CPUInfo.cpp | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/xbmc/utils/CPUInfo.cpp b/xbmc/utils/CPUInfo.cpp
index 5f5bf80..c840ab6 100644
--- a/xbmc/utils/CPUInfo.cpp
+++ b/xbmc/utils/CPUInfo.cpp
@@ -97,6 +97,10 @@
 #include "settings/AdvancedSettings.h"
 #include "utils/StringUtils.h"
 
+#ifdef HAS_LIBAMCODEC
+#include "utils/AMLUtils.h"
+#endif
+
 using namespace std;
 
 // In milliseconds
@@ -267,6 +271,10 @@ CCPUInfo::CCPUInfo(void)
     m_fProcTemperature = fopen("/sys/class/hwmon/hwmon0/temp1_input", "r");
   if (m_fProcTemperature == NULL)   
     m_fProcTemperature = fopen("/sys/class/thermal/thermal_zone0/temp", "r");  // On Raspberry PIs
+#ifdef HAS_LIBAMCODEC
+  if (m_fProcTemperature == NULL)
+    m_fProcTemperature = fopen("/sys/class/saradc/temperature", "r");
+#endif
 
   m_fCPUFreq = fopen ("/sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq", "r");
   if (!m_fCPUFreq)
@@ -609,7 +617,10 @@ bool CCPUInfo::getTemperature(CTemperature& temperature)
     if (!ret)
     {
       ret = fscanf(m_fProcTemperature, "%d", &value);
-      value = value / 1000;
+#ifndef HAS_LIBAMCODEC
+      if (!aml_present())
+        value = value / 1000;
+#endif
       scale = 'c';
       ret++;
     }
-- 
2.1.4

