#!/bin/sh

. config/options $1

if [ -z "$1" ]; then
  echo "usage: $0 package_name"
  exit 1
fi

$SCRIPTS/get $1

mkdir -p $BUILD

[ ! -d $SOURCES/$1 -a ! -d $PKG_DIR/sources ] && exit 0

mkdir -p $STAMPS/$1
STAMP=$STAMPS/$1/unpack

[ -f $STAMP -a -f $PKG_DIR/need_unpack ] && $PKG_DIR/need_unpack $@

for patch in $PKG_DIR/patches/*; do
  if [ $patch -nt $STAMP ]; then
    rm -f $STAMP
    break
  fi
done

[ -f $STAMP ] && exit 0

printf "%${INDENT}c UNPACK   $1\n" >&$SILENT_OUT
export INDENT=$((${INDENT:-1}+$INDENT_SIZE))

rm -rf $BUILD/$1[-_][0-9]*
rm -rf $BUILD/$1[-_]r[0-9]*
rm -rf $BUILD/$1[-_]cvs*
rm -rf $BUILD/$1[-_]svn*
rm -rf $BUILD/$1[-_]git*

if [ -n "$PKG_URL" ]; then
  $SCRIPTS/extract $1 "$1*.tar.bz2" $BUILD
  $SCRIPTS/extract $1 "$1*.tar.gz"  $BUILD
  $SCRIPTS/extract $1 "$1*.tgz"     $BUILD
  $SCRIPTS/extract $1 "$1*.7z"      $BUILD
fi

if [ -d $PKG_DIR/sources ]; then
  [ ! -d $BUILD/$1* ] && mkdir -p $BUILD/$1
  cp -PRf $PKG_DIR/sources/* $BUILD/$1*/
fi

[ -d $BUILD/${PKG_NAME}[-_.]${PKG_VERSION} ] && PKG_BUILD=`ls -d $BUILD/${PKG_NAME}[-_.]${PKG_VERSION}`
[ -d $BUILD/${PKG_NAME}${PKG_VERSION} ] && PKG_BUILD=`ls -d $BUILD/${PKG_NAME}${PKG_VERSION}`

for i in $PKG_DIR/patches/$PKG_NAME-$PKG_VERSION*.patch ; do
  if [ -f $i ]; then
    PATCH=`basename $i`
    PT=`echo $PATCH | sed 's/.*\.\(.*\)$/\1/'`
    if [ "$PT" != "patch" -a "$PT" != "$TARGET_ARCH" ]; then
      echo "## Skipping patch: $i"
      continue;
    else
      echo "## Applying patch: $i"
      cat $i | patch -d `echo $PKG_BUILD | cut -f1 -d\ ` -p1 >&$VERBOSE_OUT
    fi
  fi
done

$SCRIPTS/fixconfigtools $PKG_BUILD

[ -f $PKG_DIR/unpack ] && $PKG_DIR/unpack $@ >&$VERBOSE_OUT

rm -f $STAMPS/$1/build

for i in `sed -n "s/^\([^#].*\)=\".*$/\1/p" $PROJECT_DIR/$PROJECT/options | grep -v "#"`; do
  eval val=\$$i
  echo "STAMP_$i=\"$val"\" >> $STAMP
done
