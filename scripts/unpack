#!/bin/sh

################################################################################
#      This file is part of OpenELEC - http://www.openelec.tv
#      Copyright (C) 2009-2012 Stephan Raue (stephan@openelec.tv)
#
#  This Program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2, or (at your option)
#  any later version.
#
#  This Program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with OpenELEC.tv; see the file COPYING.  If not, write to
#  the Free Software Foundation, 51 Franklin Street, Suite 500, Boston, MA 02110, USA.
#  http://www.gnu.org/copyleft/gpl.html
################################################################################

. config/options $1

if [ -z "$1" ]; then
  echo "usage: $0 package_name"
  exit 1
fi

$SCRIPTS/get $1

mkdir -p $BUILD

[ ! -d "$SOURCES/$1" -a ! -d "$PKG_DIR/sources" ] && exit 0

mkdir -p $STAMPS/$1
STAMP=$STAMPS/$1/unpack

[ -f "$STAMP" -a -f "$PKG_DIR/need_unpack" ] && $PKG_DIR/need_unpack $@

for patch in $PKG_DIR/patches/*; do
  if [ "$patch" -nt "$STAMP" ]; then
    rm -f $STAMP
    break
  fi
done

[ -f "$STAMP" ] && exit 0

printf "%${INDENT}c UNPACK   $1\n" >&$SILENT_OUT
export INDENT=$((${INDENT:-1}+$INDENT_SIZE))

rm -rf $BUILD/$1[-_][0-9]*
rm -rf $BUILD/$1[-_]r[0-9]*
rm -rf $BUILD/$1[-_]cvs*
rm -rf $BUILD/$1[-_]svn*
rm -rf $BUILD/$1[-_]git*

if [ -n "$PKG_URL" ]; then
  $SCRIPTS/extract $1 "$1*.tar.bz2" $BUILD
  $SCRIPTS/extract $1 "$1*.tbz"     $BUILD
  $SCRIPTS/extract $1 "$1*.tar.gz"  $BUILD
  $SCRIPTS/extract $1 "$1*.tar.xz"  $BUILD
  $SCRIPTS/extract $1 "$1*.txz"     $BUILD
  $SCRIPTS/extract $1 "$1*.tgz"     $BUILD
  $SCRIPTS/extract $1 "$1*.7z"      $BUILD
fi

[ -f "$PKG_DIR/rename" ] && $PKG_DIR/rename $@ >&$VERBOSE_OUT

if [ -d "$PKG_DIR/sources" ]; then
  [ ! -d "$BUILD/${PKG_NAME}-${PKG_VERSION}" ] && mkdir -p $BUILD/${PKG_NAME}-${PKG_VERSION}
  cp -PRf $PKG_DIR/sources/* $BUILD/${PKG_NAME}-${PKG_VERSION}
fi

[ -d $BUILD/${PKG_NAME}[-_.]${PKG_VERSION} ] && PKG_BUILD=`ls -d $BUILD/${PKG_NAME}[-_.]${PKG_VERSION}`
[ -d $BUILD/${PKG_NAME}${PKG_VERSION} ] && PKG_BUILD=`ls -d $BUILD/${PKG_NAME}${PKG_VERSION}`
[ -d $BUILD/${PKG_NAME} ] && PKG_BUILD=`ls -d $BUILD/${PKG_NAME}`

for i in $PKG_DIR/patches/$PKG_NAME-$PKG_VERSION*.patch ; do
  if [ -f "$i" ]; then
    PATCH=`basename $i`
    PT=`echo $PATCH | sed 's/.*\.\(.*\)$/\1/'`
    if [ "$PT" != "patch" -a "$PT" != "$TARGET_ARCH" ]; then
      printf "%${INDENT}c SKIP PATCH:   $i\n" >&$SILENT_OUT
      continue;
    else
      printf "%${INDENT}c APPLY PATCH:   $i\n" >&$SILENT_OUT
      cat $i | patch -d `echo "$PKG_BUILD" | cut -f1 -d\ ` -p1 >&$VERBOSE_OUT
    fi
  fi
done

[ -f "$PKG_DIR/unpack" ] && $PKG_DIR/unpack $@ >&$VERBOSE_OUT

for config in `find $BUILD/$1* -name config.guess | sed 's/config.guess//'`; do
  printf "%${INDENT}c FIXCONFIG:   $config\n" >&$SILENT_OUT

  [ -f "$config/config.guess" ] && cp -f $SCRIPTS/configtools/config.guess $config
  [ -f "$config/config.sub" ] && cp -f $SCRIPTS/configtools/config.sub $config
  [ -f "$config/configure.guess" ] && cp -f $SCRIPTS/configtools/config.guess $config/configure.guess
  [ -f "$config/configure.sub" ] && cp -f $SCRIPTS/configtools/config.sub $config/configure.sub
done

rm -f $STAMPS/$1/build

for i in `sed -n "s/^\([^#].*\)=\".*$/\1/p" $PROJECT_DIR/$PROJECT/options | grep -v "#"`; do
  eval val=\$$i
  echo "STAMP_$i=\"$val"\" >> $STAMP
done
