#!/bin/bash

################################################################################
#      This file is part of OpenELEC - http://www.openelec.tv
#      Copyright (C) 2009-2014 Stephan Raue (stephan@openelec.tv)
#
#  OpenELEC is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 2 of the License, or
#  (at your option) any later version.
#
#  OpenELEC is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with OpenELEC.  If not, see <http://www.gnu.org/licenses/>.
################################################################################

. config/options $1

if [ "$1" = "--update-checksums" ]; then
  export UPDATE_CHECKSUMS=true
fi
if [ -z "$1" ] || [ "$1" = "--update-checksums" ]; then
  if [ "$1" = "--update-checksums" ]; then
    export UPDATE_CHECKSUMS=true
  fi
  for i in `find packages/ -type f -name package.mk`; do
    GET_PKG=`grep ^PKG_NAME= $i | sed -e "s,\",,g" -e "s,PKG_NAME=,,"`
    $SCRIPTS/get $GET_PKG
  done
fi

if [ -n "$PKG_URL" ]; then
  for i in $PKG_URL; do
    SOURCE_NAME="`basename $i`"
    PACKAGE="$SOURCES/$1/$SOURCE_NAME"
    PACKAGE_MIRROR="$DISTRO_MIRROR/$PKG_NAME/$SOURCE_NAME"
    [ "$VERBOSE" != "yes" ] && WGET_OPT=-q
    WGET_CMD="wget --passive-ftp --no-check-certificate -c $WGET_OPT -P $SOURCES/$1"

    NBWGET="1"

    STAMP="$PACKAGE.url"
    MD5SUM="$PACKAGE.md5"

    mkdir -p $SOURCES/$1

    if [ -f "$STAMP" ]; then
      [ `cat $STAMP` = "$i" ] && continue
    fi
    DL="yes"

    $SCRIPTS/checkdeps get

    rm -f $STAMP

    printf "%${BUILD_INDENT}c ${boldcyan}GET${endcolor}      $1\n" ' '>&$SILENT_OUT
    export BUILD_INDENT=$((${BUILD_INDENT:-1}+$BUILD_INDENT_SIZE))

    until [ -f "$STAMP" ] || $WGET_CMD $i || $WGET_CMD $PACKAGE_MIRROR; do
      NBWGET=$(($NBWGET+1))
      if [ "$NBWGET" -gt "10" ]; then
        echo -e "\nCant't get $1 sources : $i\n Try later !!"
        exit 1
      fi
    done

    if [ "$UPDATE_CHECKSUMS" = true ]; then
      sum="$(sha256sum $PACKAGE | awk '{print $1}')"
      tmp=$(mktemp)
      awk -F= '
        BEGIN{
          OFS="="
        }
        $1 == "PKG_SHA256"{
          $2="\"'"$sum"'\""
        }
        {print}' "$PKG_DIR/package.mk" > $tmp
      mv $tmp "$PKG_DIR/package.mk"
    elif ! sha256sum --strict --status --check <<< "$PKG_SHA256 $PACKAGE"; then
      echo "Package integrity check failed."
      exit 1
    fi

    echo $i > $STAMP
    md5sum -t $PACKAGE > $MD5SUM

    rm -f $BUILD_BASE*/$STAMPS_NOARCH/$1/unpack
    rm -f $BUILD_BASE*/$STAMPS_NOARCH/$1/build
  done
fi
