diff -Naur glib-2.32.3/configure.ac glib-2.32.3.patch/configure.ac
--- glib-2.32.3/configure.ac	2012-06-01 03:42:10.016773547 +0200
+++ glib-2.32.3.patch/configure.ac	2012-06-01 03:45:09.568226313 +0200
@@ -193,7 +193,7 @@
 AM_CONDITIONAL(OS_CARBON, [test "$glib_have_carbon" = "yes"])
 AM_CONDITIONAL(OS_COCOA, [test "$glib_have_cocoa" = "yes"])
 
-if test "$glib_native_win32" = "yes"; then
+AS_IF([test "$glib_native_win32" = "yes"], [
   AC_CHECK_TOOL(WINDRES, windres, no)
   if test "$WINDRES" = no; then
     AC_MSG_ERROR([*** Could not find an implementation of windres in your PATH.])
@@ -204,7 +204,7 @@
   fi
   AC_CHECK_TOOL(RANLIB, ranlib, :)
   AC_CHECK_PROG(ms_librarian, [lib.exe], [yes], [no])
-fi
+])
 AM_CONDITIONAL(MS_LIB_AVAILABLE, [test x$ms_librarian = xyes])
 
 if test "$glib_native_win32" != yes; then
@@ -217,10 +217,10 @@
 fi
 AC_SUBST(LIBTOOL_EXPORT_OPTIONS)
 
-if test "x$glib_have_carbon" = "xyes"; then
+AS_IF([test "x$glib_have_carbon" = "xyes"], [
   AC_DEFINE(HAVE_CARBON, 1, [define to 1 if Carbon is available])
   LDFLAGS="$LDFLAGS -framework Carbon"
-fi
+])
 
 if test "x$glib_have_cocoa" = "xyes"; then
   AC_DEFINE(HAVE_COCOA, 1, [define to 1 if Cocoa is available])
@@ -228,9 +228,9 @@
 fi
 
 gl_GLIBC21
-if test "x$GLIBC21" = "xyes"; then
+AS_IF([test "x$GLIBC21" = "xyes"], [
   AC_DEFINE([_GNU_SOURCE], 1, [Make all glibc extensions visible])
-fi
+])
 
 dnl declare --enable-* args and collect ac_help strings
 AC_ARG_ENABLE(debug,
@@ -252,20 +252,18 @@
               [enable_rebuilds=yes])
 
 AC_MSG_CHECKING([whether to enable garbage collector friendliness])
-if test "x$enable_gc_friendly" = "xyes"; then
+AS_IF([test "x$enable_gc_friendly" = "xyes"], [
   AC_DEFINE(ENABLE_GC_FRIENDLY_DEFAULT, 1, [Whether to enable GC friendliness by default])
   AC_MSG_RESULT([yes])
-else
-  AC_MSG_RESULT([no])
-fi
+], [ AC_MSG_RESULT([no]) ])
 
 AC_MSG_CHECKING([whether to disable memory pools])
-if test "x$disable_mem_pools" = "xno"; then
+AS_IF([test "x$disable_mem_pools" = "xno"], [
   AC_MSG_RESULT([no])
-else
+], [
   AC_DEFINE(DISABLE_MEM_POOLS, [1], [Whether to disable memory pools])
   AC_MSG_RESULT([yes])
-fi
+])
 
 dnl location to install runtime libraries, e.g. ../../lib to install
 dnl to /lib if libdir is /usr/lib
@@ -388,9 +386,9 @@
 
 dnl On Windows we use a native implementation
 
-if test x"$glib_native_win32" = xyes; then
+AS_IF([ test x"$glib_native_win32" = xyes], [
   with_libiconv=native
-else
+], [
   AC_ARG_WITH(libiconv,
 	      [AC_HELP_STRING([--with-libiconv=@<:@no/gnu/native@:>@],
 			      [use the libiconv library])],,
@@ -424,7 +422,7 @@
   if test "x$found_iconv" = "xno" ; then
      AC_MSG_ERROR([*** No iconv() implementation found in C library or libiconv])
   fi
-fi
+])
 
 AC_ARG_ENABLE(iconv-cache, 
               [AC_HELP_STRING([--enable-iconv-cache=@<:@yes/no/auto@:>@],
@@ -498,14 +496,14 @@
 dnl Now we are done with gettext checks, figure out ICONV_LIBS
 dnl
 
-if test x"$glib_native_win32" != xyes; then
+AS_IF([test x"$glib_native_win32" != xyes], [
   if test x$with_libiconv != xno ; then
     case " $INTLLIBS " in
     *[[\ \	]]-liconv[[\ \	]]*) ;;
     *) ICONV_LIBS="-liconv" ;;
     esac
   fi
-fi
+])
 AC_SUBST(ICONV_LIBS)
 
 case $with_libiconv in
@@ -531,7 +529,7 @@
   esac
 fi
 
-if test "$glib_native_win32" = "yes"; then
+AS_IF([test "$glib_native_win32" = "yes"], [
   if test x$enable_static = xyes -a x$enable_shared = xyes; then
     AC_MSG_ERROR([Can not build both shared and static at the same time on Windows.])
   fi
@@ -541,13 +539,13 @@
 #define GOBJECT_STATIC_COMPILATION 1"
     AC_SUBST(GLIB_WIN32_STATIC_COMPILATION_DEFINE)
   fi
-fi
+])
 AM_CONDITIONAL(OS_WIN32_AND_DLL_COMPILATION, [test x$glib_native_win32 = xyes -a x$glib_win32_static_compilation != xyes])
 
 dnl
 dnl DU4 native cc currently needs -std1 for ANSI mode (instead of K&R)
 dnl
-if test $cross_compiling != yes ; then
+AS_IF([test $cross_compiling != yes], [
     AC_MSG_CHECKING([for extra flags to get ANSI library prototypes])
     glib_save_LIBS=$LIBS
     LIBS="$LIBS -lm"
@@ -566,7 +564,7 @@
 	 )
     )
     LIBS=$glib_save_LIBS
-fi
+])
 
 dnl NeXTStep cc seems to need this
 AC_MSG_CHECKING([for extra flags for POSIX compliance])
@@ -615,7 +613,7 @@
 ])
 fi
 
-if test x$glib_native_win32 != xyes && test x$ac_cv_sizeof_long_long = x8; then
+AS_IF([test x$glib_native_win32 != xyes && test x$ac_cv_sizeof_long_long = x8], [
 	# long long is a 64 bit integer.
 	AC_MSG_CHECKING(for format to printf and scanf a guint64)
 	AC_CACHE_VAL(glib_cv_long_long_format,[
@@ -634,16 +632,14 @@
 			break],
 			[],[:])
 		done])
-	if test -n "$glib_cv_long_long_format"; then
+	AS_IF([ test -n "$glib_cv_long_long_format"], [
 	  AC_MSG_RESULT(%${glib_cv_long_long_format}u)
 	  AC_DEFINE(HAVE_LONG_LONG_FORMAT,1,[define if system printf can print long long])
 	  if test x"$glib_cv_long_long_format" = xI64; then
 	    AC_DEFINE(HAVE_INT64_AND_I64,1,[define to support printing 64-bit integers with format I64])
-	  fi
-        else
-	  AC_MSG_RESULT(none)
-        fi
-elif test x$ac_cv_sizeof___int64 = x8; then
+          fi
+	], [AC_MSG_RESULT(none)])
+],[ test x$ac_cv_sizeof___int64 = x8], [
 	# __int64 is a 64 bit integer.
 	AC_MSG_CHECKING(for format to printf and scanf a guint64)
 	# We know this is MSVCRT.DLL, and what the formats are
@@ -651,7 +647,7 @@
 	AC_MSG_RESULT(%${glib_cv_long_long_format}u)
         AC_DEFINE(HAVE_LONG_LONG_FORMAT,1,[define if system printf can print long long])
 	AC_DEFINE(HAVE_INT64_AND_I64,1,[define to support printing 64-bit integers with format I64])
-fi
+])
 
 AC_C_CONST
 
@@ -663,7 +659,7 @@
 SANE_MALLOC_PROTOS=no
 AC_MSG_CHECKING([if malloc() and friends prototypes are gmem.h compatible])
 glib_save_CFLAGS=$CFLAGS
-if test "x$GCC" = "xyes"; then
+AS_IF([test "x$GCC" = "xyes"], [
   CFLAGS="$CFLAGS -Werror"
   AC_TRY_COMPILE([#include <stdlib.h>], [
     void* (*my_calloc_p)  (size_t, size_t) = calloc;
@@ -678,7 +674,7 @@
     AC_DEFINE(SANE_MALLOC_PROTOS, 1, 
       [Define if you have correct malloc prototypes])
     SANE_MALLOC_PROTOS=yes)
-fi
+])
 AC_MSG_RESULT($SANE_MALLOC_PROTOS)
 CFLAGS=$glib_save_CFLAGS
 
@@ -795,7 +791,7 @@
 AC_MSG_RESULT($g_have_iso_c_varargs)
 
 AC_MSG_CHECKING(for ISO C99 varargs macros in C++)
-if test "$CXX" = ""; then
+AS_IF([test "$CXX" = ""], [
 dnl No C++ compiler
   g_have_iso_cxx_varargs=no
 else
@@ -806,7 +802,7 @@
 call_a(2,3);
 ],g_have_iso_cxx_varargs=yes,g_have_iso_cxx_varargs=no)
   AC_LANG_C
-fi
+])
 AC_MSG_RESULT($g_have_iso_cxx_varargs)
 
 AC_MSG_CHECKING(for GNUC varargs macros)
@@ -952,8 +948,8 @@
 dnl warnings when used in the location as size_t. (This matters
 dnl on AIX with xlc)
 dnl
-if test $ac_cv_sizeof_size_t = $ac_cv_sizeof_int &&
-   test $ac_cv_sizeof_size_t = $ac_cv_sizeof_long ; then
+AS_IF([test $ac_cv_sizeof_size_t = $ac_cv_sizeof_int &&
+       test $ac_cv_sizeof_size_t = $ac_cv_sizeof_long], [
   GLIB_CHECK_COMPILE_WARNINGS([AC_LANG_SOURCE([[
 #if defined(_AIX) && !defined(__GNUC__)
 #pragma options langlvl=stdc89
@@ -978,7 +974,7 @@
    return (int)*size_long;
 }
         ]])],glib_size_type=long)])
-fi
+])
 
 AC_MSG_RESULT(unsigned $glib_size_type)
 
@@ -1058,7 +1054,7 @@
 AC_CHECK_FUNCS(getprotobyname_r endservent if_nametoindex)
 AC_CHECK_HEADERS([netdb.h wspiapi.h arpa/nameser_compat.h])
 
-if test $glib_native_win32 = no; then
+AS_IF([test $glib_native_win32 = no], [
   # We can't just use AC_CHECK_FUNC/AC_CHECK_LIB here. Bug 586150
   NETWORK_LIBS=""
   AC_MSG_CHECKING([for res_query])
@@ -1089,7 +1085,7 @@
   AC_CHECK_FUNC(socket, :, AC_CHECK_LIB(socket, socket,
 				        [NETWORK_LIBS="-lsocket $NETWORK_LIBS"],
 				        [AC_MSG_ERROR(Could not find socket())]))
-fi
+])
 AC_SUBST(NETWORK_LIBS)
 
 AC_CHECK_HEADER([linux/netlink.h],
@@ -1112,7 +1108,7 @@
 dnl
 dnl if statfs() takes 2 arguments (Posix) or 4 (Solaris)
 dnl
-if test "$ac_cv_func_statfs" = yes ; then
+AS_IF([test "$ac_cv_func_statfs" = yes], [
   AC_MSG_CHECKING([number of arguments to statfs()])
   AC_TRY_COMPILE([#include <unistd.h>
   #ifdef HAVE_SYS_PARAM_H
@@ -1148,7 +1144,7 @@
       AC_DEFINE(STATFS_ARGS, 4, [Number of arguments to statfs()])],[
       AC_MSG_RESULT(unknown)
       AC_MSG_ERROR([unable to determine number of arguments to statfs()])])])
-fi
+])
 
 #
 # Check whether to use an included printf
@@ -1184,14 +1180,14 @@
 enable_included_printf=$need_included_printf
 
 AM_CONDITIONAL(HAVE_GOOD_PRINTF, test "$enable_included_printf" != "yes")
-if test "$enable_included_printf" != "yes" ; then 
+AS_IF([test "$enable_included_printf" != "yes"], [
   AC_DEFINE(HAVE_GOOD_PRINTF,1,[define to use system printf])
-else
+], [
   if test -z "$glib_cv_long_long_format" ; then
     glib_cv_long_long_format="ll"
   fi
   AC_DEFINE(HAVE_VASPRINTF,1)
-fi
+])
 
 # Checks needed for gnulib vasnprintf
 bh_C_SIGNED
@@ -1207,7 +1203,7 @@
 
 # Check if bcopy can be used for overlapping copies, if memmove isn't found.
 # The check is borrowed from the PERL Configure script.
-if test "$ac_cv_func_memmove" != "yes"; then
+AS_IF([test "$ac_cv_func_memmove" != "yes"],
   AC_CACHE_CHECK(whether bcopy can handle overlapping copies,
     glib_cv_working_bcopy,[AC_TRY_RUN([
       int main() {
@@ -1230,15 +1226,15 @@
   if test "$glib_cv_working_bcopy" = "yes"; then
     AC_DEFINE(HAVE_WORKING_BCOPY,1,[Have a working bcopy])
   fi
-fi
+])
 
 # Check if <sys/select.h> needs to be included for fd_set
 AC_MSG_CHECKING([for fd_set])
 AC_TRY_COMPILE([#include <sys/types.h>],
         [fd_set readMask, writeMask;], gtk_ok=yes, gtk_ok=no)
-if test "$gtk_ok" = "yes"; then
+AS_IF([test "$gtk_ok" = "yes"], [
     AC_MSG_RESULT([yes, found in sys/types.h])
-else
+], [
     AC_EGREP_HEADER(fd_set, sys/select.h, gtk_ok=yes)
     if test "$gtk_ok" = "yes"; then
 	# *** FIXME: give it a different name
@@ -1248,7 +1244,7 @@
 	AC_DEFINE(NO_FD_SET,1,[didn't find fd_set])
 	AC_MSG_RESULT(no)
     fi
-fi
+])
 
 dnl *** check for sane realloc() ***
 AC_CACHE_CHECK([whether realloc (NULL,) will work],glib_cv_sane_realloc,[
@@ -1260,9 +1256,9 @@
         [glib_cv_sane_realloc=no],
 	[glib_cv_sane_realloc=yes])
 ])
-if test x$glib_cv_sane_realloc = xyes; then
+AS_IF([test x$glib_cv_sane_realloc = xyes], [
   AC_DEFINE(REALLOC_0_WORKS,1,[whether realloc (NULL,) works])
-fi
+])
 
 dnl Check for nl_langinfo and CODESET
 AC_CACHE_CHECK([for nl_langinfo (CODESET)],glib_cv_langinfo_codeset,[
@@ -1348,12 +1344,12 @@
       :
     fi
     ])
-if test "$glib_cv_compliant_posix_memalign" = "1"; then
+AS_IF([test "$glib_cv_compliant_posix_memalign" = "1"], [
     AC_MSG_RESULT(yes)
     AC_DEFINE(POSIX_MEMALIGN_WITH_COMPLIANT_ALLOCS, 1, [define if posix_memalign() can allocate any size])
-else
+], [
     AC_MSG_RESULT(no)
-fi
+])
 
 
 dnl ****************************************
@@ -1450,9 +1446,9 @@
 	[glib_cv_va_val_copy=yes])
 ])
 
-if test "x$glib_cv_va_val_copy" = "xno"; then
+AS_IF([ test "x$glib_cv_va_val_copy" = "xno"], [
   AC_DEFINE(G_VA_COPY_AS_ARRAY,1, ['va_lists' cannot be copies as values])
-fi
+])
 
 dnl ***********************
 dnl *** g_module checks ***
@@ -1485,45 +1481,45 @@
   esac
 fi
 dnl *** dlopen() and dlsym() in system libraries
-if test -z "$G_MODULE_IMPL"; then
+AS_IF([ test -z "$G_MODULE_IMPL"], [
 	AC_CHECK_FUNC(dlopen,
 		      [AC_CHECK_FUNC(dlsym,
 			             [G_MODULE_IMPL=G_MODULE_IMPL_DL],[])],
 		      [])
-fi
+])
 dnl *** load_image (BeOS)
-if test -z "$G_MODULE_IMPL" && test "x$glib_native_beos" = "xyes"; then
+AS_IF([test -z "$G_MODULE_IMPL" && test "x$glib_native_beos" = "xyes"], [
   AC_CHECK_LIB(root, load_image,
       [G_MODULE_LIBS="-lbe -lroot -lglib-2.0 "
       G_MODULE_LIBS_EXTRA="-L\$(top_builddir_full)/.libs"
       G_MODULE_PLUGIN_LIBS="-L\$(top_builddir_full)/gmodule/.libs -lgmodule"
       G_MODULE_IMPL=G_MODULE_IMPL_BEOS],
       [])
-fi   
+])
 dnl *** NSLinkModule (dyld) in system libraries (Darwin)
-if test -z "$G_MODULE_IMPL"; then
+AS_IF([ test -z "$G_MODULE_IMPL" ], [
  	AC_CHECK_FUNC(NSLinkModule,
 		      [G_MODULE_IMPL=G_MODULE_IMPL_DYLD
 		       G_MODULE_NEED_USCORE=1],
 		      [])
-fi
+])
 dnl *** dlopen() and dlsym() in libdl
-if test -z "$G_MODULE_IMPL"; then
+AS_IF([ test -z "$G_MODULE_IMPL"], [
 	AC_CHECK_LIB(dl, dlopen,
 		     [AC_CHECK_LIB(dl, dlsym,
 			           [G_MODULE_LIBS=-ldl
 		                   G_MODULE_IMPL=G_MODULE_IMPL_DL],[])],
 		     [])
-fi
+])
 dnl *** shl_load() in libdld (HP-UX)
-if test -z "$G_MODULE_IMPL"; then
+AS_IF([ test -z "$G_MODULE_IMPL"], [
 	AC_CHECK_LIB(dld, shl_load,
 		[G_MODULE_LIBS=-ldld
 		G_MODULE_IMPL=G_MODULE_IMPL_DLD],
 		[])
-fi
+])
 dnl *** additional checks for G_MODULE_IMPL_DL
-if test "$G_MODULE_IMPL" = "G_MODULE_IMPL_DL"; then
+AS_IF([ test "$G_MODULE_IMPL" = "G_MODULE_IMPL_DL" ], [
 	LIBS_orig="$LIBS"
 	LDFLAGS_orig="$LDFLAGS"
 	LIBS="$G_MODULE_LIBS $LIBS"
@@ -1598,7 +1594,7 @@
 		[G_MODULE_HAVE_DLERROR=1],
 		[G_MODULE_HAVE_DLERROR=0])
 	LIBS="$LIBS_orig"
-fi
+])
 dnl *** done, have we got an implementation?
 if test -z "$G_MODULE_IMPL"; then
 	G_MODULE_IMPL=0
@@ -1683,7 +1679,7 @@
                              [build without selinux support]))
 msg_selinux=no
 SELINUX_LIBS=
-if test "x$enable_selinux" != "xno"; then
+AS_IF([ test "x$enable_selinux" != "xno"], [
 
  AC_CHECK_LIB(selinux, is_selinux_enabled,
    [AC_CHECK_HEADERS(selinux/selinux.h,
@@ -1693,7 +1689,7 @@
         msg_selinux=yes])
      ])
    ])
-fi
+])
 AC_SUBST(SELINUX_LIBS)
 
 dnl *****************************
@@ -1763,7 +1759,7 @@
               AC_HELP_STRING([--disable-xattr], [build without xattr support]))
 msg_xattr=no
 XATTR_LIBS=
-if test "x$enable_xattr" != "xno"; then
+AS_IF([ test "x$enable_xattr" != "xno"], [
 
 dnl either glibc or libattr can provide xattr support
 
@@ -1777,7 +1773,7 @@
       msg_xattr=yes])
    ])
 
-  if test "x$msg_xattr" != "xyes"; then
+  AS_IF([ test "x$msg_xattr" != "xyes"], [
 dnl   failure. try libattr
    AC_CHECK_LIB(attr, getxattr,
       [AC_CHECK_HEADERS(attr/xattr.h,
@@ -1785,9 +1781,9 @@
         XATTR_LIBS="-lattr"
         msg_xattr=yes])
       ])
-  fi
+  ])
 
-  if test "x$msg_xattr" = "xyes"; then
+  AS_IF([ test "x$msg_xattr" = "xyes"], [
     AC_MSG_CHECKING([for XATTR_NOFOLLOW])
     AC_TRY_COMPILE([
       #include <stdio.h>
@@ -1807,9 +1803,8 @@
     ],
     [AC_MSG_RESULT([no])]
     )
-  fi
-
-fi
+  ])
+])
 AC_SUBST(XATTR_LIBS)
 
 dnl ************************
@@ -1818,7 +1813,7 @@
 
 PKG_CHECK_MODULES([LIBELF], [libelf], [have_libelf=yes], [have_libelf=maybe])
 
-if test $have_libelf = maybe; then
+AS_IF([ test $have_libelf = maybe], [
   glib_save_LIBS=$LIBS
   AC_CHECK_LIB([elf], [elf_begin], , [have_libelf=no])
   AC_CHECK_LIB([elf], [elf_getshdrstrndx], , [have_libelf=no])
@@ -1830,7 +1825,7 @@
     LIBELF_LIBS=-lelf
     have_libelf=yes
   fi
-fi
+])
 
 if test $have_libelf = yes; then
   AC_DEFINE(HAVE_LIBELF, 1, [Define if libelf is available])
@@ -1922,17 +1917,17 @@
 AC_MSG_CHECKING(for thread implementation)
 
 have_threads=no
-if test "x$with_threads" = xyes || test "x$with_threads" = xposix; then
+AS_IF([ test "x$with_threads" = xyes || test "x$with_threads" = xposix], [
 	# -D_POSIX4_DRAFT_SOURCE -D_POSIX4A_DRAFT10_SOURCE is for DG/UX
 	# -U_OSF_SOURCE is for Digital UNIX 4.0d
 	GTHREAD_COMPILE_IMPL_DEFINES="-D_POSIX4_DRAFT_SOURCE -D_POSIX4A_DRAFT10_SOURCE -U_OSF_SOURCE"
 	glib_save_CPPFLAGS="$CPPFLAGS"
 	CPPFLAGS="$CPPFLAGS $GTHREAD_COMPILE_IMPL_DEFINES"
-        if test "x$have_threads" = xno; then
+        AS_IF([ test "x$have_threads" = xno], [
                 AC_TRY_COMPILE([#include <pthread.h>],
 			[pthread_mutex_t m = PTHREAD_MUTEX_INITIALIZER;],
 			have_threads=posix)
-        fi
+	])
 	# Tru64Unix requires -pthread to find pthread.h. See #103020
 	CPPFLAGS="$CPPFLAGS -pthread"
 	if test "x$have_threads" = xno; then
@@ -1941,7 +1936,7 @@
 		       have_threads=posix)
         fi
 	CPPFLAGS="$glib_save_CPPFLAGS"
-fi
+])
 if test "x$with_threads" = xyes || test "x$with_threads" = xwin32; then
         case $host in
                 *-*-mingw*)
@@ -1980,7 +1975,7 @@
    return (check_me != 42 || ret != &check_me);
 }])
 
-if test x"$have_threads" = xposix; then
+AS_IF([ test x"$have_threads" = xposix], [
   # First we test for posix, whether -pthread or -pthreads do the trick as 
   # both CPPFLAG and LIBS. 
   # One of them does for most gcc versions and some other platforms/compilers
@@ -2015,9 +2010,9 @@
       done
        ;;
   esac
-fi
+])
 
-if test x"$G_THREAD_CFLAGS" = x; then
+AS_IF([ test x"$G_THREAD_CFLAGS" = x], [
 
   # The canonical -pthread[s] does not work. Try something different.
 
@@ -2056,8 +2051,7 @@
 		G_THREAD_CFLAGS="-D_REENTRANT" # good default guess otherwise
 		;;
   esac
-
-fi
+])
 
 # if we are not finding the localtime_r function, then we probably are
 # not using the proper multithread flag
@@ -2085,11 +2079,10 @@
 dnl determination of G_THREAD_LIBS
 dnl ******************************
 
-case $have_threads in
-        posix)
+AS_IF([test x$have_threads = xposix], [
 	  glib_save_CPPFLAGS="$CPPFLAGS"
 	  CPPFLAGS="$CPPFLAGS $GTHREAD_COMPILE_IMPL_DEFINES"
-          if test x"$G_THREAD_LIBS" = x; then
+          AS_IF([ test x"$G_THREAD_LIBS" = x ], [
             case $host in
               *-aix*)
                 # We are not using gcc (would have set G_THREAD_LIBS) and thus 
@@ -2135,20 +2128,17 @@
 		LIBS="$glib_save_LIBS"
                 ;;
             esac
-          fi
+	  ])
 
 	  g_threads_impl="POSIX"
 	  AC_SUBST(GTHREAD_COMPILE_IMPL_DEFINES)
           CPPFLAGS="$glib_save_CPPFLAGS"
-          ;;
-	win32)
+], [test x$have_threads = xwin32], [
 	   g_threads_impl="WIN32"
-	   ;;
-        *)
+], [
 	   g_threads_impl="NONE"
            G_THREAD_LIBS=error
-           ;;
-esac
+])
 
 if test "x$G_THREAD_LIBS" = xerror; then
         AC_MSG_ERROR($LIBS_NOT_FOUND_1$have_threads$LIBS_NOT_FOUND_2)
@@ -2174,7 +2164,7 @@
 # to always be linked with the thread libs on some platforms. 
 # LIBS="$LIBS $G_THREAD_LIBS"
 AC_CHECK_FUNCS(localtime_r gmtime_r)
-if test "$ac_cv_header_pwd_h" = "yes"; then
+AS_IF([ test "$ac_cv_header_pwd_h" = "yes"], [
  	AC_CACHE_CHECK([for posix getpwuid_r],
 		ac_cv_func_posix_getpwuid_r,
 		[AC_TRY_RUN([
@@ -2212,8 +2202,8 @@
 				[Have non-POSIX function getpwuid_r])
 		fi
 	fi
-fi
-if test "$ac_cv_header_grp_h" = "yes"; then
+])
+AS_IF([ test "$ac_cv_header_grp_h" = "yes"], [
    	AC_CACHE_CHECK([for posix getgrgid_r],
 		ac_cv_func_posix_getgrgid_r,
 		[AC_TRY_RUN([
@@ -2232,10 +2222,10 @@
 		       [ac_cv_func_posix_getgrgid_r=yes],
 		       [ac_cv_func_posix_getgrgid_r=no])])
 	GLIB_ASSERT_SET(ac_cv_func_posix_getgrgid_r)
-	if test "$ac_cv_func_posix_getgrgid_r" = yes; then
+	AS_IF([ test "$ac_cv_func_posix_getgrgid_r" = yes ], [
 	   	AC_DEFINE(HAVE_POSIX_GETGRGID_R,1,
 			[Have POSIX function getgrgid_r])
-	else
+	], [
 		AC_CACHE_CHECK([for nonposix getgrgid_r],
 			ac_cv_func_nonposix_getgrgid_r,
 			[AC_TRY_LINK([#include <grp.h>],
@@ -2250,10 +2240,10 @@
 		   	AC_DEFINE(HAVE_NONPOSIX_GETGRGID_R,1,
 				[Have non-POSIX function getgrgid_r])
 		fi
-	fi
-fi
+	])
+])
 LIBS="$G_THREAD_LIBS $LIBS"
-if test x"$have_threads" = xposix; then
+AS_IF([ test x"$have_threads" = xposix], [
         glib_save_CPPFLAGS="$CPPFLAGS"
         CPPFLAGS="$CPPFLAGS $GTHREAD_COMPILE_IMPL_DEFINES"
         # This is not AC_CHECK_FUNC to also work with function
@@ -2277,7 +2267,7 @@
                 [Have function pthread_condattr_setclock])],
             [AC_MSG_RESULT(no)])
         CPPFLAGS="$glib_save_CPPFLAGS"
-fi
+])
 
 LIBS="$glib_save_LIBS"
 
@@ -2427,8 +2417,8 @@
 #include <sys/poll.h>
 "]
 
-if test $ac_cv_header_sys_types_h = yes &&
-   test $ac_cv_header_sys_poll_h = yes ; then
+AS_IF([ test $ac_cv_header_sys_types_h = yes &&
+   test $ac_cv_header_sys_poll_h = yes ], [
   glib_failed=false
   GLIB_CHECK_VALUE(POLLIN, $glib_poll_includes, glib_failed=true)
   GLIB_CHECK_VALUE(POLLOUT, $glib_poll_includes, glib_failed=true)
@@ -2439,14 +2429,14 @@
   if $glib_failed ; then
     AC_MSG_ERROR([Could not determine values for POLL* constants])
   fi
-else
+], [
   glib_cv_value_POLLIN=1
   glib_cv_value_POLLOUT=4
   glib_cv_value_POLLPRI=2
   glib_cv_value_POLLERR=8
   glib_cv_value_POLLHUP=16
   glib_cv_value_POLLNVAL=32
-fi
+])
 
 AC_MSG_CHECKING([for broken poll])
 AC_RUN_IFELSE([AC_LANG_SOURCE([[
@@ -2487,7 +2477,7 @@
 
 AM_CONDITIONAL(USE_SYSTEM_PCRE, [test "x$with_pcre" = xsystem])
 
-if test "x$with_pcre" = xsystem; then
+AS_IF([ test "x$with_pcre" = xsystem], [
   PKG_CHECK_MODULES(PCRE,
                     libpcre >= $PCRE_REQUIRED_VERSION)
   AC_CACHE_CHECK([for Unicode support in PCRE],glib_cv_pcre_has_unicode,[
@@ -2519,17 +2509,17 @@
   AC_DEFINE(USE_SYSTEM_PCRE, [], [using the system-supplied PCRE library])
   PCRE_REQUIRES=libpcre
   AC_SUBST(PCRE_REQUIRES)
-else
+], [
   # If using gcc 4 pass -Wno-pointer-sign when compiling the internal PCRE
-  if test x"$GCC" = xyes; then
+  AS_IF([ test x"$GCC" = xyes], [
     AC_MSG_CHECKING([whether compiler understands -Wno-pointer-sign])
     save_CFLAGS="$CFLAGS"
     CFLAGS="$CFLAGS -Wno-pointer-sign"
     AC_TRY_COMPILE([],[],[PCRE_WARN_CFLAGS="$PCRE_WARN_CFLAGS -Wno-pointer-sign"
                           AC_MSG_RESULT(yes)],[AC_MSG_RESULT(no)])
     CFLAGS="$save_CFLAGS"
-  fi
-fi
+  ])
+])
 AC_SUBST(PCRE_WARN_CFLAGS)
 
 dnl **********************
@@ -2568,7 +2558,7 @@
 
 AM_CONDITIONAL(CROSS_COMPILING, test $cross_compiling = yes)
 
-if test $cross_compiling = yes; then
+AS_IF([ test $cross_compiling = yes ], [
   AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal, no)
   if test x$GLIB_GENMARSHAL = xno; then
     AC_MSG_ERROR(Could not find a glib-genmarshal in your PATH)
@@ -2583,7 +2573,7 @@
   if test x$GLIB_COMPILE_RESOURCES = xno; then
     AC_MSG_ERROR(Could not find a glib-compile-resources in your PATH)
   fi
-fi
+])
 
 dnl **************************
 dnl *** Checks for gtk-doc ***
@@ -2623,7 +2613,7 @@
                               [include tracing support for dtrace])])
 have_dtrace=no
 AC_MSG_CHECKING([whether to include dtrace tracing support])
-if test "x$enable_dtrace" != xno; then
+AS_IF([ test "x$enable_dtrace" != xno], [
   if test x$glib_have_carbon = xyes; then
     AC_MSG_RESULT([no (not yet compatible with MacOS dtrace)])
   else 
@@ -2640,9 +2630,9 @@
                        fi])
     fi
   fi
-else
+], [
   AC_MSG_RESULT([no])
-fi
+])
 if test "x$have_dtrace" = xyes; then
   AC_DEFINE([HAVE_DTRACE], [1], [Define to 1 if using dtrace probes.])
 fi
@@ -2680,7 +2670,7 @@
 		 [enable coverage testing with gcov]),
   [use_gcov=$enableval], [use_gcov=no])
 
-if test "x$use_gcov" = "xyes"; then
+AS_IF([ test "x$use_gcov" = "xyes"], [
   dnl we need gcc:
   if test "$GCC" != "yes"; then
     AC_MSG_ERROR([GCC is required for --enable-gcov])
@@ -2701,7 +2691,7 @@
   AC_CHECK_PROG(LTP, lcov, lcov)
   AC_CHECK_PROG(LTP_GENHTML, genhtml, genhtml)
 
-  if test "$LTP"; then
+  AS_IF([ test "$LTP" ], [
     AC_CACHE_CHECK([for ltp version], glib_cv_ltp_version, [
       glib_cv_ltp_version=invalid
       ltp_version=`$LTP -v 2>/dev/null | $SED -e 's/^.* //'`
@@ -2711,10 +2701,10 @@
         fi
       done
     ])
-  else
+  ], [
     ltp_msg="To enable code coverage reporting you must have one of the following LTP versions installed: $ltp_version_list"
     AC_MSG_ERROR([$ltp_msg])
-  fi
+  ])
 
   case $glib_cv_ltp_version in
     ""|invalid[)]
@@ -2736,7 +2726,7 @@
   dnl Add the special gcc flags
   CFLAGS="$CFLAGS -O0 -fprofile-arcs -ftest-coverage"
   LDFLAGS="$LDFLAGS -lgcov"
-fi
+])
 
 dnl ******************************
 dnl *** output the whole stuff ***
