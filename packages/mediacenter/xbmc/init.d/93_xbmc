################################################################################
#      This file is part of OpenELEC - http://www.openelec.tv
#      Copyright (C) 2009-2012 Stephan Raue (stephan@openelec.tv)
#
#  This Program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2, or (at your option)
#  any later version.
#
#  This Program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with OpenELEC.tv; see the file COPYING.  If not, write to
#  the Free Software Foundation, 51 Franklin Street, Suite 500, Boston, MA 02110, USA.
#  http://www.gnu.org/copyleft/gpl.html
################################################################################

# starting XBMC
#
# runlevels: openelec

LIRCDEV="/var/run/lirc/lircd"
[ -e /var/run/lirc/lircd.irtrans ] && LIRCDEV="/var/run/lirc/lircd.irtrans"
XBMC_ARGS="--standalone -fs --lircdev $LIRCDEV"

progress "starting XBMC"

# hack for Boxee Remote
if grep -q "Vendor=0471 Product=20d9" /proc/bus/input/devices; then
  export SDL_MOUSE_RELATIVE=0
fi

# hack: make addon-bins executable
  chmod +x /storage/.xbmc/addons/*/bin/* > /dev/null 2>&1

# write Logs to storage if needed 
  LOGFILE="/var/log/messages"

# starting autostart script
  AUTOSTART="/storage/.config/autostart.sh"
  if [ -f $AUTOSTART ]; then
    echo "!!! $(date "+%b %d %T"): AUTOSTART script detected !!!" >> $LOGFILE
    cat "$AUTOSTART" >> $LOGFILE
    echo "!!! -End of autostart script- !!!" >> $LOGFILE

    sh $AUTOSTART
  fi

# call shutdown script if exists
call_shutdown_script(){
  SHUTDOWN="/storage/.config/shutdown.sh"
  if [ -f $SHUTDOWN ]; then
    echo "!!! $(date "+%b %d %T"): SHUTDOWN script detected !!!" >> $LOGFILE
    cat "$SHUTDOWN" >> $LOGFILE
    echo "!!! -End of shutdown script- !!!" >> $LOGFILE

    sh $SHUTDOWN $1
  fi
}

# starting autoupdate
  [ -f /usr/bin/autoupdate ] && /usr/bin/autoupdate &

# waiting for Xorg to start
  wait_for_xorg

# wait for network
  wait_for_inet_addr

# wait for udevadm settle to finish
  wait_for_udevadm_settle

# set cpu's to 'ondemand'
  ( usleep 15000000
    progress "set cpu's to 'ondemand'"
    cpupower frequency-set -g ondemand > /dev/null 2>&1
  )&

# prevent restrating XBMC at reboot or shutdown
  LOCKDIR="/var/lock/"
  LOCKFILE="xbmc.disabled"
  [ -f "$LOCKDIR/$LOCKFILE" ] && rm -f "$LOCKDIR/$LOCKFILE" &

# starting XBMC
  usleep $XBMC_STARTDELAY
  while true; do

    while [ -f "$LOCKDIR/$LOCKFILE" ]; do
      usleep 250000
    done

    DISPLAY=:0.0 /usr/lib/xbmc/xbmc.bin $XBMC_ARGS > /dev/null 2>&1
    RET=$?

    case "$RET" in
      0)
        if [ ! $(pidof console-kit-daemon) ]; then
          touch "$LOCKDIR/$LOCKFILE"
          call_shutdown_script quit
          _safe_shutdown
          poweroff -f
        fi
        ;;
      64)
        if [ ! $(pidof console-kit-daemon) ]; then
          touch "$LOCKDIR/$LOCKFILE"
          call_shutdown_script powerdown
          _safe_shutdown
          poweroff -f
        fi
        ;;
      66)
        if [ ! $(pidof console-kit-daemon) ]; then
          touch "$LOCKDIR/$LOCKFILE"
          call_shutdown_script reboot
          _safe_shutdown
          reboot
        fi
        ;;
      255)
        echo "Abnormal Exit. Exited with code $RET"
        echo "is Xorg running? check /var/log/Xorg.log"
        ;;
      *)
        echo "Abnormal Exit. Exited with code $RET"
        ;;
    esac

    usleep 250000
  done
