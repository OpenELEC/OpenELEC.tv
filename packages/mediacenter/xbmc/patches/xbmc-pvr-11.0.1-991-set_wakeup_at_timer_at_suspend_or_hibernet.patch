diff --git a/xbmc/ApplicationMessenger.cpp b/xbmc/ApplicationMessenger.cpp
index 7ef2027..bea711b 100644
--- a/xbmc/ApplicationMessenger.cpp
+++ b/xbmc/ApplicationMessenger.cpp
@@ -73,6 +73,9 @@
 #include "utils/JobManager.h"
 #include "storage/DetectDVDType.h"
 
+#include "pvr/PVRManager.h"
+
+using namespace PVR;
 using namespace std;
 
 CDelayedMessage::CDelayedMessage(ThreadMessage& msg, unsigned int delay)
@@ -261,12 +264,14 @@ void CApplicationMessenger::ProcessMessage(ThreadMessage *pMsg)
 
     case TMSG_HIBERNATE:
       {
+        g_PVRManager.SetWakeupCommand();
         g_powerManager.Hibernate();
       }
       break;
 
     case TMSG_SUSPEND:
       {
+        g_PVRManager.SetWakeupCommand();
         g_powerManager.Suspend();
       }
       break;
diff --git a/xbmc/pvr/PVRManager.h b/xbmc/pvr/PVRManager.h
index 94a8c9a..99280c6 100644
--- a/xbmc/pvr/PVRManager.h
+++ b/xbmc/pvr/PVRManager.h
@@ -450,6 +450,11 @@ namespace PVR
      */
     void LoadCurrentChannelSettings(void);
 
+    /*!
+     * @brief Executes "pvrpowermanagement.setwakeupcmd"
+     */
+    bool SetWakeupCommand(void);
+
   protected:
     /*!
      * @brief PVR update and control thread.
@@ -525,11 +530,6 @@ namespace PVR
     void ShowProgressDialog(const CStdString &strText, int iProgress);
 
     /*!
-     * @brief Executes "pvrpowermanagement.setwakeupcmd"
-     */
-    bool SetWakeupCommand(void);
-
-    /*!
      * @brief Hide the progress dialog if it's visible.
      */
     void HideProgressDialog(void);
diff --git a/xbmc/pvr/timers/PVRTimers.cpp b/xbmc/pvr/timers/PVRTimers.cpp
index cfba9bb..4e757d6 100644
--- a/xbmc/pvr/timers/PVRTimers.cpp
+++ b/xbmc/pvr/timers/PVRTimers.cpp
@@ -714,8 +714,7 @@ CDateTime CPVRTimers::GetNextEventTime(void) const
   const CDateTimeSpan prewakeup(0, 0, g_guiSettings.GetInt("pvrpowermanagement.prewakeup"), 0);
   const CDateTimeSpan idle(0, 0, g_guiSettings.GetInt("pvrpowermanagement.backendidletime"), 0);
 
-  CDateTime timerwakeuptime;
-  CDateTime dailywakeuptime;
+  CDateTime retVal;
 
   /* Check next active time */
   CPVRTimerInfoTag timer;
@@ -724,15 +723,16 @@ CDateTime CPVRTimers::GetNextEventTime(void) const
     const CDateTime start = timer.StartAsUTC();
 
     if ((start - idle) > now) {
-      timerwakeuptime = start - prewakeup;
+      retVal = start - prewakeup;
     } else {
-      timerwakeuptime = now + idle;
+      retVal = now + idle;
     }
   }
 
   /* check daily wake up */
   if (dailywakup)
   {
+    CDateTime dailywakeuptime;
     dailywakeuptime.SetFromDBTime(g_guiSettings.GetString("pvrpowermanagement.dailywakeuptime", false));
     dailywakeuptime = dailywakeuptime.GetAsUTCDateTime();
 
@@ -746,8 +746,9 @@ CDateTime CPVRTimers::GetNextEventTime(void) const
       const CDateTimeSpan oneDay(1,0,0,0);
       dailywakeuptime += oneDay;
     }
+    if (dailywakeuptime < retVal)
+      retVal = dailywakeuptime;
   }
 
-  const CDateTime retVal((dailywakeuptime < timerwakeuptime) ? dailywakeuptime : timerwakeuptime);
   return retVal;
 }
