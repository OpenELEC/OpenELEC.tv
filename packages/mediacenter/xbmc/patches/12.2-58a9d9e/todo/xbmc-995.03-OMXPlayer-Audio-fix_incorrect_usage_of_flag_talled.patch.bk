diff -Naur xbmc-12.1/xbmc/cores/omxplayer/OMXPlayerAudio.cpp xbmc-12.1.patch/xbmc/cores/omxplayer/OMXPlayerAudio.cpp
--- xbmc-12.1/xbmc/cores/omxplayer/OMXPlayerAudio.cpp	2013-04-07 22:10:57.264461705 +0200
+++ xbmc-12.1.patch/xbmc/cores/omxplayer/OMXPlayerAudio.cpp	2013-04-07 22:18:08.064718783 +0200
@@ -80,6 +80,7 @@
   m_send_eos      = false;
   m_bad_state     = false;
   m_hints_current.Clear();
+  m_output_stalled = false;
 
   m_av_clock->SetMasterClock(false);
 
@@ -154,6 +155,7 @@
   m_stalled         = m_messageQueue.GetPacketCount(CDVDMsg::DEMUXER_PACKET) == 0;
   m_use_passthrough = (g_guiSettings.GetInt("audiooutput.mode") == AUDIO_HDMI) ? true : false ;
   m_use_hw_decode   = g_advancedSettings.m_omxHWAudioDecode;
+  m_output_stalled  = m_stalled;
 }
 
 bool OMXPlayerAudio::CloseStream(bool bWaitForBuffers)
@@ -442,11 +444,11 @@
   }
 
   if(bDropPacket)
-    m_stalled = false;
+    m_stalled = m_output_stalled = false;
 
   if(m_omxAudio.GetCacheTime() < 0.1 /*&& min(99,m_messageQueue.GetLevel() + MathUtils::round_int(100.0/8.0*GetCacheTime())) > 10*/)
   {
-    m_stalled = true;
+    m_stalled = m_output_stalled = true;
     if(!m_av_clock->OMXAudioBuffer() && m_av_clock->HasVideo() && m_speed == DVD_PLAYSPEED_NORMAL)
     {
       clock_gettime(CLOCK_REALTIME, &m_starttime);
@@ -454,6 +456,9 @@
     }
   }
 
+  if (m_stalled && m_omxAudio.GetCacheTime() > 0.0)
+    m_stalled = false;
+
   // signal to our parent that we have initialized
   if(m_started == false)
   {
@@ -478,6 +483,7 @@
 
     if (ret == MSGQ_TIMEOUT)
     {
+      m_stalled = true;
       Sleep(10);
       continue;
     }
@@ -497,12 +503,14 @@
       CLog::Log(LOGINFO, "Audio: dts:%.0f pts:%.0f size:%d (s:%d f:%d d:%d l:%d) s:%d %d/%d late:%d,%d", pPacket->dts, pPacket->pts,
            (int)pPacket->iSize, m_started, m_flush, bPacketDrop, m_stalled, m_speed, 0, 0, (int)m_omxAudio.GetAudioRenderingLatency(), (int)m_hints_current.samplerate);
       #endif
+
+      m_stalled = false;
       if(Decode(pPacket, m_speed > DVD_PLAYSPEED_NORMAL || m_speed < 0 || bPacketDrop))
       {
-        if (m_stalled && (m_omxAudio.GetCacheTime() > (AUDIO_BUFFER_SECONDS * 0.75f)))
+        if (m_output_stalled && (m_omxAudio.GetCacheTime() > (AUDIO_BUFFER_SECONDS * 0.75f)))
         {
           CLog::Log(LOGINFO, "COMXPlayerAudio - Switching to normal playback");
-          m_stalled = false;
+          m_stalled = m_output_stalled = false;
           if(m_av_clock->HasVideo() && m_av_clock->OMXAudioBuffer())
             m_av_clock->OMXAudioBufferStop();
         }
@@ -510,9 +518,9 @@
       // hard unlock audio out buffering
       clock_gettime(CLOCK_REALTIME, &m_endtime);
       //int iLevel = min(99,m_messageQueue.GetLevel() + MathUtils::round_int(100.0/8.0*GetCacheTime()));
-      if(/*iLevel < 10 &&*/ m_stalled && m_av_clock->OMXAudioBuffer() && (m_endtime.tv_sec - m_starttime.tv_sec) > 1)
+      if(/*iLevel < 10 &&*/ m_output_stalled && m_av_clock->OMXAudioBuffer() && (m_endtime.tv_sec - m_starttime.tv_sec) > 1)
       {
-        m_stalled = false;
+        m_stalled = m_output_stalled = false;
         if(m_av_clock->HasVideo() && m_av_clock->OMXAudioBuffer())
           m_av_clock->OMXAudioBufferStop();
       }
@@ -563,6 +571,7 @@
       m_av_clock->UnLock();
       m_syncclock = true;
       m_stalled   = true;
+      m_output_stalled = true;
       m_started   = false;
 
       if (m_pAudioCodec)
diff -Naur xbmc-12.1/xbmc/cores/omxplayer/OMXPlayerAudio.h xbmc-12.1.patch/xbmc/cores/omxplayer/OMXPlayerAudio.h
--- xbmc-12.1/xbmc/cores/omxplayer/OMXPlayerAudio.h	2013-04-07 22:10:57.262461708 +0200
+++ xbmc-12.1.patch/xbmc/cores/omxplayer/OMXPlayerAudio.h	2013-04-07 22:13:15.931280700 +0200
@@ -76,6 +76,7 @@
 
   bool                      m_stalled;
   bool                      m_started;
+  bool                      m_output_stalled;
 
   BitstreamStats            m_audioStats;
 
