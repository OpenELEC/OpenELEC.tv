--- xbmc-10.1-Dharma/xbmc/cores/dvdplayer/DVDInputStreams/DVDInputStreamBluray.cpp	2011-03-08 02:49:17.000000000 +0100
+++ xbmc-10.1-Dharma/xbmc/cores/dvdplayer/DVDInputStreams/DVDInputStreamBluray.cpp.new	2011-08-29 22:19:01.314816310 +0200
@@ -40,9 +40,9 @@
 {
 public:
   virtual ~DllLibblurayInterface() {};
-  virtual uint32_t bd_get_titles(BLURAY *bd, uint8_t flags)=0;
-  virtual BLURAY_TITLE_INFO* bd_get_title_info(BLURAY *bd, uint32_t title_idx)=0;
-  virtual BLURAY_TITLE_INFO* bd_get_playlist_info(BLURAY *bd, uint32_t playlist)=0;
+  virtual uint32_t bd_get_titles(BLURAY *bd, uint8_t flags, uint32_t min_title_length)=0;
+  virtual BLURAY_TITLE_INFO* bd_get_title_info(BLURAY *bd, uint32_t title_idx, unsigned angle)=0;
+  virtual BLURAY_TITLE_INFO* bd_get_playlist_info(BLURAY *bd, uint32_t playlist, unsigned angle)=0;
   virtual void bd_free_title_info(BLURAY_TITLE_INFO *title_info)=0;
   virtual BLURAY *bd_open(const char* device_path, const char* keyfile_path)=0;
   virtual void bd_close(BLURAY *bd)=0;
@@ -70,9 +70,9 @@
 {
   DECLARE_DLL_WRAPPER(DllLibbluray, DLL_PATH_LIBBLURAY)
 
-  DEFINE_METHOD2(uint32_t,            bd_get_titles,          (BLURAY *p1, uint8_t p2))
-  DEFINE_METHOD2(BLURAY_TITLE_INFO*,  bd_get_title_info,      (BLURAY *p1, uint32_t p2))
-  DEFINE_METHOD2(BLURAY_TITLE_INFO*,  bd_get_playlist_info,   (BLURAY *p1, uint32_t p2))
+  DEFINE_METHOD3(uint32_t,            bd_get_titles,          (BLURAY *p1, uint8_t p2, uint32_t p3))
+  DEFINE_METHOD3(BLURAY_TITLE_INFO*,  bd_get_title_info,      (BLURAY *p1, uint32_t p2, unsigned p3))
+  DEFINE_METHOD3(BLURAY_TITLE_INFO*,  bd_get_playlist_info,   (BLURAY *p1, uint32_t p2, unsigned p3))
   DEFINE_METHOD1(void,                bd_free_title_info,     (BLURAY_TITLE_INFO *p1))
   DEFINE_METHOD2(BLURAY*,             bd_open,                (const char* p1, const char* p2))
   DEFINE_METHOD1(void,                bd_close,               (BLURAY *p1))
@@ -303,12 +303,12 @@
   CStdString filename = CUtil::GetFileName(strFile);
   if(filename.Equals("index.bdmv"))
   {
-    int titles = m_dll->bd_get_titles(m_bd, TITLES_RELEVANT);
+    int titles = m_dll->bd_get_titles(m_bd, TITLES_RELEVANT, 0);
 
     BLURAY_TITLE_INFO *t, *s = NULL;
     for(int i=0; i < titles; i++)
     {
-      t = m_dll->bd_get_title_info(m_bd, i);;
+      t = m_dll->bd_get_title_info(m_bd, i, 0);;
       if(!t)
       {
         CLog::Log(LOGDEBUG, "get_main_title - unable to get title %d", i);
@@ -324,7 +324,7 @@
   }
   else if(CUtil::GetExtension(filename).Equals(".mpls"))
   {
-    int titles = m_dll->bd_get_titles(m_bd, TITLES_ALL);
+    int titles = m_dll->bd_get_titles(m_bd, TITLES_ALL, 0);
     do
     {
       if(titles < 0)
@@ -345,7 +345,7 @@
       BLURAY_TITLE_INFO *t;
       for(int i=0; i < titles; i++)
       {
-        t = m_dll->bd_get_title_info(m_bd, i);;
+        t = m_dll->bd_get_title_info(m_bd, i, 0);;
         if(!t)
         {
           CLog::Log(LOGDEBUG, "get_playlist_title - unable to get title %d", i);        
