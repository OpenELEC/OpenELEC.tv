diff -Naur kodi-17.1-Krypton/project/cmake/modules/FindSSE.cmake kodi-17.1-Krypton.patch/project/cmake/modules/FindSSE.cmake
--- kodi-17.1-Krypton/project/cmake/modules/FindSSE.cmake	2017-03-20 17:17:49.000000000 +0100
+++ kodi-17.1-Krypton.patch/project/cmake/modules/FindSSE.cmake	2017-04-19 14:00:34.000000000 +0200
@@ -2,43 +2,46 @@
 # the project is compiled.
 include(TestCXXAcceptsFlag)
 
-if(CMAKE_SYSTEM_NAME MATCHES "Linux")
+if(NOT CMAKE_SYSTEM_NAME MATCHES "Windows")
+  CHECK_CXX_ACCEPTS_FLAG("-msse" _SSE_OK)
+  CHECK_CXX_ACCEPTS_FLAG("-msse2" _SSE2_OK)
+  CHECK_CXX_ACCEPTS_FLAG("-msse3" _SSE3_OK)
+  CHECK_CXX_ACCEPTS_FLAG("-mssse3" _SSSE3_OK)
+  CHECK_CXX_ACCEPTS_FLAG("-msse4.1" _SSE41_OK)
+  CHECK_CXX_ACCEPTS_FLAG("-msse4.2" _SSE42_OK)
+  CHECK_CXX_ACCEPTS_FLAG("-mavx" _AVX_OK)
+  CHECK_CXX_ACCEPTS_FLAG("-mavx2" _AVX2_OK)
+endif()
+
+if(CMAKE_SYSTEM_NAME MATCHES "Linux" AND NOT CMAKE_CROSSCOMPILING)
    if(CPU MATCHES "x86_64" OR CPU MATCHES "i.86")
      exec_program(cat ARGS "/proc/cpuinfo" OUTPUT_VARIABLE CPUINFO)
 
      string(REGEX REPLACE "^.*(sse).*$" "\\1" _SSE_THERE ${CPUINFO})
      string(COMPARE EQUAL "sse" "${_SSE_THERE}" _SSE_TRUE)
-     CHECK_CXX_ACCEPTS_FLAG("-msse" _SSE_OK)
 
      string(REGEX REPLACE "^.*(sse2).*$" "\\1" _SSE_THERE ${CPUINFO})
      string(COMPARE EQUAL "sse2" "${_SSE_THERE}" _SSE2_TRUE)
-     CHECK_CXX_ACCEPTS_FLAG("-msse2" _SSE2_OK)
 
      # SSE3 is also known as the Prescott New Instructions (PNI)
      # it's labeled as pni in /proc/cpuinfo
      string(REGEX REPLACE "^.*(pni).*$" "\\1" _SSE_THERE ${CPUINFO})
      string(COMPARE EQUAL "pni" "${_SSE_THERE}" _SSE3_TRUE)
-     CHECK_CXX_ACCEPTS_FLAG("-msse3" _SSE3_OK)
 
      string(REGEX REPLACE "^.*(ssse3).*$" "\\1" _SSE_THERE ${CPUINFO})
      string(COMPARE EQUAL "ssse3" "${_SSE_THERE}" _SSSE3_TRUE)
-     CHECK_CXX_ACCEPTS_FLAG("-mssse3" _SSSE3_OK)
 
      string(REGEX REPLACE "^.*(sse4_1).*$" "\\1" _SSE_THERE ${CPUINFO})
      string(COMPARE EQUAL "sse4_1" "${_SSE_THERE}" _SSE41_TRUE)
-     CHECK_CXX_ACCEPTS_FLAG("-msse4.1" _SSE41_OK)
 
      string(REGEX REPLACE "^.*(sse4_2).*$" "\\1" _SSE_THERE ${CPUINFO})
      string(COMPARE EQUAL "sse4_2" "${_SSE_THERE}" _SSE42_TRUE)
-     CHECK_CXX_ACCEPTS_FLAG("-msse4.2" _SSE42_OK)
 
      string(REGEX REPLACE "^.*(avx).*$" "\\1" _SSE_THERE ${CPUINFO})
      string(COMPARE EQUAL "avx" "${_SSE_THERE}" _AVX_TRUE)
-     CHECK_CXX_ACCEPTS_FLAG("-mavx" _AVX_OK)
 
      string(REGEX REPLACE "^.*(avx2).*$" "\\1" _SSE_THERE ${CPUINFO})
      string(COMPARE EQUAL "avx2" "${_SSE_THERE}" _AVX2_TRUE)
-     CHECK_CXX_ACCEPTS_FLAG("-mavx2" _AVX2_OK)
    endif()
 elseif(CMAKE_SYSTEM_NAME MATCHES "Darwin")
    if(NOT CPU MATCHES "arm")
@@ -46,35 +49,27 @@
 
       string(REGEX REPLACE "^.*[^S](SSE).*$" "\\1" _SSE_THERE ${CPUINFO})
       string(COMPARE EQUAL "SSE" "${_SSE_THERE}" _SSE_TRUE)
-      CHECK_CXX_ACCEPTS_FLAG("-msse" _SSE_OK)
 
       string(REGEX REPLACE "^.*[^S](SSE2).*$" "\\1" _SSE_THERE ${CPUINFO})
       string(COMPARE EQUAL "SSE2" "${_SSE_THERE}" _SSE2_TRUE)
-      CHECK_CXX_ACCEPTS_FLAG("-msse2" _SSE2_OK)
 
       string(REGEX REPLACE "^.*[^S](SSE3).*$" "\\1" _SSE_THERE ${CPUINFO})
       string(COMPARE EQUAL "SSE3" "${_SSE_THERE}" _SSE3_TRUE)
-      CHECK_CXX_ACCEPTS_FLAG("-msse3" _SSE3_OK)
 
       string(REGEX REPLACE "^.*(SSSE3).*$" "\\1" _SSE_THERE ${CPUINFO})
       string(COMPARE EQUAL "SSSE3" "${_SSE_THERE}" _SSSE3_TRUE)
-      CHECK_CXX_ACCEPTS_FLAG("-mssse3" _SSSE3_OK)
 
       string(REGEX REPLACE "^.*(SSE4.1).*$" "\\1" _SSE_THERE ${CPUINFO})
       string(COMPARE EQUAL "SSE4.1" "${_SSE_THERE}" _SSE41_TRUE)
-      CHECK_CXX_ACCEPTS_FLAG("-msse4.1" _SSE41_OK)
 
       string(REGEX REPLACE "^.*(SSE4.2).*$" "\\1" _SSE_THERE ${CPUINFO})
       string(COMPARE EQUAL "SSE4.2" "${_SSE_THERE}" _SSE42_TRUE)
-      CHECK_CXX_ACCEPTS_FLAG("-msse4.2" _SSE42_OK)
 
       string(REGEX REPLACE "^.*(AVX).*$" "\\1" _SSE_THERE ${CPUINFO})
       string(COMPARE EQUAL "AVX" "${_SSE_THERE}" _AVX_TRUE)
-      CHECK_CXX_ACCEPTS_FLAG("-mavx" _AVX_OK)
 
       string(REGEX REPLACE "^.*(AVX2).*$" "\\1" _SSE_THERE ${CPUINFO})
       string(COMPARE EQUAL "AVX2" "${_SSE_THERE}" _AVX2_TRUE)
-      CHECK_CXX_ACCEPTS_FLAG("-mavx2" _AVX2_OK)
    endif()
 elseif(CMAKE_SYSTEM_NAME MATCHES "Windows")
    # TODO
@@ -82,6 +77,14 @@
    set(_SSE_OK   true)
    set(_SSE2_TRUE true)
    set(_SSE2_OK   true)
+elseif(CMAKE_SYSTEM_NAME MATCHES "Linux" AND CMAKE_CROSSCOMPILING)
+   # TODO
+   set(_SSE_TRUE true)
+   set(_SSE2_TRUE true)
+   set(_SSE3_TRUE    true)
+   set(_SSSE3_TRUE   true)
+   set(_SSE41_TRUE   true)
+#   set(_SSE42_TRUE   true)
 endif()
 
 include(FindPackageHandleStandardArgs)
