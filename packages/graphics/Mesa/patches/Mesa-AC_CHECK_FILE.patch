diff -Naur Mesa-9.1.1/configure.ac Mesa-9.1.1.patch/configure.ac
--- Mesa-9.1.1/configure.ac	2013-03-20 01:14:17.000000000 +0100
+++ Mesa-9.1.1.patch/configure.ac	2013-05-01 02:51:48.086299947 +0200
@@ -1923,7 +1923,9 @@
     if test "x$with_llvm_shared_libs" = xyes; then
         dnl We can't use $LLVM_VERSION because it has 'svn' stripped out,
         LLVM_SO_NAME=LLVM-`$LLVM_CONFIG --version`
-        AC_CHECK_FILE("$LLVM_LIBDIR/lib$LLVM_SO_NAME.so", llvm_have_one_so=yes,)
+        if test -f "$LLVM_LIBDIR/lib$LLVM_SO_NAME.so"; then
+          llvm_have_one_so=yes
+        fi
 
         if test "x$llvm_have_one_so" = xyes; then
             dnl LLVM was built using auto*, so there is only one shared object.
@@ -1931,8 +1933,8 @@
         else
             dnl If LLVM was built with CMake, there will be one shared object per
             dnl component.
-            AC_CHECK_FILE("$LLVM_LIBDIR/libLLVMTarget.so",,
-                    AC_MSG_ERROR([Could not find llvm shared libraries:
+            if test ! -f "$LLVM_LIBDIR/libLLVMTarget.so"; then
+              AC_MSG_ERROR([Could not find llvm shared libraries:
 	Please make sure you have built llvm with the --enable-shared option
 	and that your llvm libraries are installed in $LLVM_LIBDIR
 	If you have installed your llvm libraries to a different directory you
@@ -1943,11 +1945,12 @@
 		--enable-opencl
 	If you do not want to build with llvm shared libraries and instead want to
 	use llvm static libraries then remove these options from your configure
-	invocation and reconfigure.]))
+	invocation and reconfigure.])
 
            dnl We don't need to update LLVM_LIBS in this case because the LLVM
            dnl install uses a shared object for each compoenent and we have
            dnl already added all of these objects to LLVM_LIBS.
+            fi
         fi
     fi
 fi
