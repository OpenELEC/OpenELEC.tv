From 0366a844c36bf8424a2625425c181b9b97f35bee Mon Sep 17 00:00:00 2001
From: Robert Hooker <sarvatt@ubuntu.com>
Date: Wed, 1 Sep 2010 13:23:21 -0400
Subject: [PATCH] Attempt to get nvidia and fglrx working without an xorg.conf.

Signed-off-by: Robert Hooker <sarvatt@ubuntu.com>
---
 hw/xfree86/common/xf86AutoConfig.c |   12 +++++++++++-
 hw/xfree86/common/xf86pciBus.c     |   14 +++++++++-----
 2 files changed, 20 insertions(+), 6 deletions(-)

diff --git a/hw/xfree86/common/xf86AutoConfig.c b/hw/xfree86/common/xf86AutoConfig.c
index 8ef602d..a8f04b9 100644
--- a/hw/xfree86/common/xf86AutoConfig.c
+++ b/hw/xfree86/common/xf86AutoConfig.c
@@ -81,6 +81,13 @@
 	"\tDevice\t" BUILTIN_DEVICE_NAME "\n" \
 	"EndSection\n\n"
 
+#define BUILTIN_SCREEN_SECTION_PROPRIETARY \
+	"Section \"Screen\"\n" \
+	"\tIdentifier\t" BUILTIN_SCREEN_NAME "\n" \
+	"\tDevice\t" BUILTIN_DEVICE_NAME "\n" \
+	"\tDefaultDepth\t24\n" \
+	"EndSection\n\n"
+
 #define BUILTIN_LAYOUT_SECTION_PRE \
 	"Section \"ServerLayout\"\n" \
 	"\tIdentifier\t\"Builtin Default Layout\"\n"
@@ -159,7 +166,10 @@ xf86AutoConfig(void)
     for (p = deviceList; *p; p++) {
 	snprintf(buf, sizeof(buf), BUILTIN_DEVICE_SECTION, *p, 0, *p);
 	AppendToConfig(buf);
-	snprintf(buf, sizeof(buf), BUILTIN_SCREEN_SECTION, *p, 0, *p, 0);
+	if( strcmp(*p, "fglrx") == 0 || strcmp(*p, "nvidia") == 0)
+		snprintf(buf, sizeof(buf), BUILTIN_SCREEN_SECTION_PROPRIETARY, *p, 0, *p, 0);
+	else
+		snprintf(buf, sizeof(buf), BUILTIN_SCREEN_SECTION, *p, 0, *p, 0);
 	AppendToConfig(buf);
     }
 
diff --git a/hw/xfree86/common/xf86pciBus.c b/hw/xfree86/common/xf86pciBus.c
index 930ed83..a6aa4f4 100644
--- a/hw/xfree86/common/xf86pciBus.c
+++ b/hw/xfree86/common/xf86pciBus.c
@@ -1102,7 +1102,10 @@ videoPtrToDriverList(struct pci_device *dev,
 	case 0x1142:		    driverList[0] = "apm"; break;
 	case 0xedd8:		    driverList[0] = "ark"; break;
 	case 0x1a03:		    driverList[0] = "ast"; break;
-	case 0x1002:		    driverList[0] = "ati"; break;
+	case 0x1002:
+	    driverList[0] = "fglrx";
+	    driverList[1] = "ati";
+	    break;
 	case 0x102c:		    driverList[0] = "chips"; break;
 	case 0x1013:		    driverList[0] = "cirrus"; break;
 	case 0x3d3d:		    driverList[0] = "glint"; break;
@@ -1119,20 +1122,21 @@ videoPtrToDriverList(struct pci_device *dev,
 	case 0x102b:		    driverList[0] = "mga";	break;
 	case 0x10c8:		    driverList[0] = "neomagic"; break;
 	case 0x10de: case 0x12d2:
+	    driverList[0] = "nvidia";
 	    switch (dev->device_id) {
 	    /* NV1 */
 	    case 0x0008:
 	    case 0x0009:
-		driverList[0] = "vesa";
+		driverList[1] = "vesa";
 		break;
 	    /* NV3 */
 	    case 0x0018:
 	    case 0x0019:
-		driverList[0] = "nv";
+		driverList[1] = "nv";
 		break;
 	    default:
-		driverList[0] = "nouveau";
-		driverList[1] = "nv";
+		driverList[1] = "nouveau";
+		driverList[2] = "nv";
 		break;
 	    }
 	    break;
-- 
1.7.2

