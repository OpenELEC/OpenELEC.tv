--- oscam-1.10/module-dvbapi.c	2011-12-08 00:02:39.058737655 +0100
+++ /emu/backup/oscam-1.10/module-dvbapi.c	2011-12-07 23:35:15.708736813 +0100
@@ -4,7 +4,7 @@
 
 #include "module-dvbapi.h"
 
-const char *boxdesc[] = { "none", "dreambox", "duckbox", "ufs910", "dbox2", "ipbox", "ipbox-pmt", "dm7000", "qboxhd", "coolstream", "neumo" };
+const char *boxdesc[] = { "none", "dreambox", "duckbox", "ufs910", "dbox2", "ipbox", "ipbox-pmt", "dm7000", "qboxhd", "coolstream", "neumo", "pc" };
 
 const struct box_devices devices[BOX_COUNT] = {
 	/* QboxHD (dvb-api-3)*/	{ "/tmp/virtual_adapter/", 	"ca%d",		"demux%d",			"/tmp/camd.socket" },
@@ -214,6 +214,9 @@
 		if (cfg.dvbapi_boxtype==BOXTYPE_QBOXHD)
 			num=0;
 
+		if (cfg.dvbapi_boxtype==BOXTYPE_PC)
+			num=0;
+
 		snprintf(device_path2, sizeof(device_path2), devices[selected_box].ca_device, num+ca_offset);
 		snprintf(device_path, sizeof(device_path), devices[selected_box].path, adapter);
 
@@ -1090,6 +1093,12 @@
 		adapter_index = buffer[21]; // with STONE 1.0.4 adapter index can be 0,1,2
 		ca_mask = (1 << adapter_index); // use adapter_index as ca_mask (used as index for ca_fd[] array)
 	}
+	
+	if (cfg.dvbapi_boxtype == BOXTYPE_PC ) {
+		demux_index = buffer[6];   // it always 0 but you never know
+		adapter_index = buffer[7]; // adapter index can be 0,1,2
+		ca_mask = (1 << adapter_index); // use adapter_index as ca_mask (used as index for ca_fd[] array)
+	}
 
 	demux[demux_id].program_number=((buffer[1] << 8) | buffer[2]);
 	demux[demux_id].demux_index=demux_index;
@@ -1106,10 +1115,10 @@
 		cs_strncpy(demux[demux_id].pmt_file, pmtfile, sizeof(demux[demux_id].pmt_file));
 
 	if (program_info_length > 1 && program_info_length < length)
-		dvbapi_parse_descriptor(demux_id, program_info_length-1, buffer+7);
+		dvbapi_parse_descriptor(demux_id, program_info_length-1, buffer+9);
 
 	uint32_t es_info_length=0;
-	for (i = program_info_length + 6; i < length; i += es_info_length + 5) {
+	for (i = program_info_length + 8; i < length; i += es_info_length + 5) {
 		int32_t stream_type = buffer[i];
 		uint16_t elementary_pid = ((buffer[i + 1] & 0x1F) << 8) | buffer[i + 2];
 		es_info_length = ((buffer[i + 3] & 0x0F) << 8) | buffer[i + 4];
@@ -1301,9 +1310,10 @@
 	if (pthread_mutex_trylock(&event_handler_lock) == EBUSY)
 		return;
 
-	int32_t standby_fd = open(STANDBY_FILE, O_RDONLY);
-	pausecam = (standby_fd > 0) ? 1 : 0;
-	if (standby_fd) close(standby_fd);
+	//int32_t standby_fd = open(STANDBY_FILE, O_RDONLY);
+	//pausecam = (standby_fd > 0) ? 1 : 0;
+	//if (standby_fd) close(standby_fd);
+	pausecam = 0;
 
 	if (cfg.dvbapi_boxtype==BOXTYPE_IPBOX || cfg.dvbapi_pmtmode == 1) {
 		pthread_mutex_unlock(&event_handler_lock);
--- oscam-1.10/globals.h	2011-12-08 00:02:39.068737655 +0100
+++ /emu/backup/oscam-1.10/globals.h	2011-12-07 23:34:38.678736793 +0100
@@ -234,7 +234,8 @@
 #define BOXTYPE_QBOXHD	8
 #define BOXTYPE_COOLSTREAM	9
 #define BOXTYPE_NEUMO	10
-#define BOXTYPES		10
+#define BOXTYPE_PC		11
+#define BOXTYPES		11
 extern const char *boxdesc[];
 #endif
 
