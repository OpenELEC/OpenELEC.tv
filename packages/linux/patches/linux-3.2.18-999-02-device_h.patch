--- linux-3.2.18/include/linux/device.h.orig	2012-05-31 21:34:22.147996696 +0200
+++ linux-3.2.18/include/linux/device.h	2012-05-31 21:36:09.996566960 +0200
@@ -924,4 +924,32 @@ extern long sysfs_deprecated;
 #define sysfs_deprecated 0
 #endif
 
+/* compatibility macro for modules > 3.2 ... */
+/**
+ * module_driver() - Helper macro for drivers that don't do anything
+ * special in module init/exit. This eliminates a lot of boilerplate.
+ * Each module may only use this macro once, and calling it replaces
+ * module_init() and module_exit().
+ *
+ * @__driver: driver name
+ * @__register: register function for this driver type
+ * @__unregister: unregister function for this driver type
+ * @...: Additional arguments to be passed to __register and __unregister.
+ *
+ * Use this macro to construct bus specific macros for registering
+ * drivers, and do not use it on its own.
+ */
+#define module_driver(__driver, __register, __unregister, ...) \
+	static int __init __driver##_init(void) \
+{ \
+	        return __register(&(__driver) , ##__VA_ARGS__); \
+} \
+module_init(__driver##_init); \
+static void __exit __driver##_exit(void) \
+{ \
+	        __unregister(&(__driver) , ##__VA_ARGS__); \
+} \
+module_exit(__driver##_exit);
+
+
 #endif /* _DEVICE_H_ */
